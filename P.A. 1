{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d68cdedb-8af3-4274-b62d-dd53779e064d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a Word:  University of Santo Tomas\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Alphabet Soup:    STUaaefiimnnooorssttvy\n"
     ]
    }
   ],
   "source": [
    "def Alphabet_Soup(word):\n",
    "    return ''.join(sorted(word))\n",
    "word = input(\"Enter a Word: \")\n",
    "print(\"Alphabet Soup:\", Alphabet_Soup(word))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2586c690-4892-43f4-9dd3-0a3a2c5333b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you make me >:(\n"
     ]
    }
   ],
   "source": [
    "def emotify(sentence):\n",
    "    emoticons = {\n",
    "        \"smile\": \":)\",\n",
    "        \"grin\": \":D\",\n",
    "        \"sad\": \":((\",\n",
    "        \"mad\": \">:(\"\n",
    "    }\n",
    "    words = sentence.split()\n",
    "    result = []\n",
    "    \n",
    "    for word in words:\n",
    "        if word.lower() in emoticons:\n",
    "            result.append(emoticons[word.lower()])\n",
    "        else:\n",
    "            result.append(word)\n",
    "    \n",
    "    return \" \".join(result)\n",
    "\n",
    "print(emotify(\"you make me mad\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3237718b-55f7-4743-94d5-482a5266d6c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FIrst: 1\n",
      "Middle: [2, 7, 14, 19]\n",
      "Last: 127\n"
     ]
    }
   ],
   "source": [
    "def unpack_list(lst):\n",
    "    first, *middle, last = lst\n",
    "    print(\"FIrst:\", first)\n",
    "    print(\"Middle:\", middle)\n",
    "    print(\"Last:\", last)\n",
    "lst = [1, 2, 7, 14, 19, 127]\n",
    "unpack_list(lst)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
